class Solution {
  public:
    vector <int> bottomView(Node *root) {
      map<int, int> mp;
      queue<pair<Node *, int>> q;

      if (!root) return {};

      q.push({root, 0});
      
      while (!q.empty()) {
          auto p = q.front();
          q.pop();
          Node* node = p.first;
          int col = p.second;

           mp[col] = node->data;


          if (node->left) {
              q.push({node->left, col - 1});
          }
          if (node->right) {
              q.push({node->right, col + 1});
          }
      }
      
      vector<int> col_nodes;
      
      for (auto& col_map : mp) {
          col_nodes.push_back(col_map.second);
      }
      
      return col_nodes;
    }
};