FORM - 2

#include <bits/stdc++.h>
using namespace std;

vector<int> arr;
vector<int> dp;

int rec(int level) {
    
    if (level < 0) return 0; 

    if (dp[level] != -1) return dp[level];

    int ans = 1;
    for (int prev_taken = 0; prev_taken < level; prev_taken++) {
        if (arr[prev_taken] < arr[level]) {
            ans = max(ans, 1 + rec(prev_taken));
        }
    }
    return dp[level] = ans;
}

void solve() {
    int n;
    cin >> n;
    arr.resize(n);
    dp.assign(n, -1);

    for (int i = 0; i < n; i++) cin >> arr[i];

    int lis = 1;
    for (int i = 0; i < n; i++) {
        lis = max(lis, rec(i));
    }

    cout << "Length of Longest Increasing Subsequence: " << lis << endl;
}

int main() {
    solve();
    return 0;
}
