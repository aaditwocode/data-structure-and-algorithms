#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int maxSubArraySum(const vector<int>& arr) {
    int n = arr.size();
    if (n == 0) return 0;

    vector<int> dp(n);
    dp[0] = arr[0];
    int max_sum = dp[0];

    for (int i = 1; i < n; ++i) {
        dp[i] = max(arr[i], dp[i - 1] + arr[i]);
        max_sum = max(max_sum, dp[i]);
    }

    return max_sum;
}

int main() {
    vector<int> arr = {-2, 1, -3, 4, -1, 2, 1, -5, 4};

    cout << "Maximum Subarray Sum = " << maxSubArraySum(arr) << endl;

    return 0;
}
