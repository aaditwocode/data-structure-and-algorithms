class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        stack<int> s;
        vector<int> v;
        unordered_map<int, int> record;
        int m = nums1.size();
        int n = nums2.size();
        int i = 0;

        while (i <= n) {
            if (s.size() == 0) {
                v.push_back(-1);
            } else if (nums2[i] < s.top()) {
                v.push_back(s.top());
            } else if (nums2[i] >= s.top()) {
                while (s.size() > 0 && nums2[i] >= s.top()) {
                    s.pop();
                }
                if (s.size() == 0) {
                    v.push_back(-1);
                } else {
                    v.push_back(s.top());
                }
            }
            s.push(nums2[i]);
            i--;
        }


        for (int j = 0; j < n; j++) {
            record[nums2[j]] = v[j];
        }

        vector<int> result;
        for (int j = 0; j < m; j++) {
            result.push_back(record[nums1[j]]);
        }

        return result;
    }
}; 


same as next greater element traversal occur from left to right
no reverse of vector needed