#include <bits/stdc++.h> 
using namespace std;

class Node {
public:
    Node* links[26];

    bool containsKey(char ch) {
        return (links[ch - 'a'] != nullptr);
    }

    Node* get(char ch) {
        return links[ch - 'a'];
    }

    void put(char ch, Node* node) {
        links[ch - 'a'] = node;
    }
};

int countDistinctSubstrings(string &s) {
    Node* root = new Node();
    int count = 0;
    int n = s.size();

    for (int i = 0; i < n; i++) {
        Node* node = root;
        for (int j = i; j < n; j++) {
            char currentChar = s[j];
            if (!node->containsKey(currentChar)) {
                node->put(currentChar, new Node());
                count++;
            }
            node = node->get(currentChar);
        }
    }

    return count;
}