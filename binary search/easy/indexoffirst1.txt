int findFirstOne(int arr[], int start, int end) {
    int result = -1;

    while (start <= end) {
        int mid = start + (end - start) / 2;

        // If arr[mid] is 1, search in the left half to find the first occurrence
        if (arr[mid] == 1) {
            result = mid;  // Record the position
            end = mid - 1;  // Continue searching in the left half
        }
        // If arr[mid] is 0, search in the right half
        else {
            start = mid + 1;
        }
    }

    return result; // Return the index of the first occurrence of 1
}

int findFirstOneInInfiniteArray(int arr[]) {
    int start = 0;
    int end = 1;

    // Expand the range until we find a '1'
    while (arr[end] == 0) {
        start = end;   // Move start to current end
        end *= 2;      // Double the end index
    }

    // Perform binary search in the range [start, end]
    return findFirstOne(arr, start, end);
}