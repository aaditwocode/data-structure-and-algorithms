class Solution {
public:
    int majorityElement(std::vector<int>& nums) {
        int n = nums.size();
        int el = -1; 
        int cnt = 0;
        //moore algo works as if count return to 0 stop that group ans set the next element on search list if there count increses else 
        count decreses if reach 0 reset 
        for (int i = 0; i < n; i++) {
            if (cnt == 0) {
                cnt = 1;
                el = nums[i];
            } else if (nums[i] == el) {
                cnt++;
            } else {
                cnt--;
            }
        }
        // If the count of potential majority element is greater than n/2, return it
        int cnt1 = 0;
        for (int i = 0; i < n; i++) {
            if (nums[i] == el) {
                cnt1++;
            }
        }
        
        // If the count of potential majority element is greater than n/2, return it
        if (cnt1 > n / 2) {
            return el;
        } else {
            // If there's no majority element, return -1
            return -1;
        }
    }
};
tc-0(2n)
ac-o(1)
