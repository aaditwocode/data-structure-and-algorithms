class Solution {
public:
    Node* insertAtEnd(Node *head, int x) {
        // Create a new node with the given data
        Node *newNode = new Node(x);
        
        // If the list is empty, the new node becomes the head
        if (head == nullptr) {
            return newNode;
        }

        // Traverse to the end of the list
        Node *temp = head;
        while (temp->next != nullptr) {
            temp = temp->next;
        }

        // Set the next of the last node to the new node
        temp->next = newNode;

        return head;
    }
};
