class Solution
{
    public:
   
    Node* segregate(Node *head) {
        
   
        Node* zeroDummy = new Node(-1);
        Node* oneDummy = new Node(-1);
        Node* twoDummy = new Node(-1);

       
        Node* zeroTail = zeroDummy;
        Node* oneTail = oneDummy;
        Node* twoTail = twoDummy;

      
        Node* temp = head;
        while (temp != nullptr) {
            if (temp->data == 0) {
                zeroTail->next = temp;
                zeroTail = zeroTail->next;
            } else if (temp->data == 1) {
                oneTail->next = temp;
                oneTail = oneTail->next;
            } else {
                twoTail->next = temp;
                twoTail = twoTail->next;
            }
            temp = temp->next;
        }
    
        zeroTail->next = (oneDummy->next) ? oneDummy->next : twoDummy->next;
        oneTail->next = twoDummy->next;
        twoTail->next = nullptr;
        
        
        head = zeroDummy->next;
        
        delete zeroDummy;
        delete oneDummy;
        delete twoDummy;
        
        return head;
  
    }
};