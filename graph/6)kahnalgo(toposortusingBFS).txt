#include <vector>
#include <unordered_map>
#include <queue>
using namespace std;

class Solution {
  public:
    vector<int> kahnBFS(unordered_map<int, vector<int>> &adj, vector<int> &indegree, int V) {
        queue<int> q;
        vector<int> result;

        for (int i = 0; i < V; i++) {
            if (indegree[i] == 0) q.push(i);
        }

        while (!q.empty()) {
            int u = q.front();
            q.pop();
            result.push_back(u);

            for (int v : adj[u]) {
                indegree[v]--;
                if (indegree[v] == 0) q.push(v);
            }
        }

        if (result.size() != V) return {};
        return result;
    }

    vector<int> topoSort(int V, vector<vector<int>>& edges) {
        unordered_map<int, vector<int>> adj;
        vector<int> indegree(V, 0);

        for (auto &e : edges) {
            adj[e[0]].push_back(e[1]);
            indegree[e[1]]++;
        }

        return kahnBFS(adj, indegree, V);
    }
};
