REC+MEMOIZATION

class Solution {
public:
    int t[501][501];
    int m, n;

    int solve(string& s1, string& s2, int i, int j) {
        if (i == m)
            return accumulate(s2.begin() + j, s2.end(), 0); 
        if (j == n)
            return accumulate(s1.begin() + i, s1.end(), 0); 
        
        if (t[i][j] != -1)
            return t[i][j];

        if (s1[i] == s2[j])
            return t[i][j] = solve(s1, s2, i + 1, j + 1);
        else {
            int deleteC  = int(s1[i]) + solve(s1, s2, i + 1, j);
            int deleteC2 = int(s2[j]) + solve(s1, s2, i, j + 1);

            return t[i][j] = min(deleteC, deleteC2);
        }
    }

    int minimumDeleteSum(string s1, string s2) {
        m = s1.length();
        n = s2.length();
        memset(t, -1, sizeof(t));
        return solve(s1, s2, 0, 0);
    }
};
