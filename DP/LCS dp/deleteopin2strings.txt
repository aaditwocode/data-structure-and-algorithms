rec+MEMOMIZATION

class Solution {
private:
    int solve(const string &t1, const string &t2, int i, int j, vector<vector<int>> &dp) {
        if (i == t1.size() || j == t2.size()) {
            return 0;
        }
        
        if (dp[i][j] != -1) {
            return dp[i][j];
        }

        if (t1[i] == t2[j]) {
            dp[i][j] = 1 + solve(t1, t2, i + 1, j + 1, dp);
        } else {
            dp[i][j] = max(solve(t1, t2, i + 1, j, dp), solve(t1, t2, i, j + 1, dp));
        }

        return dp[i][j];
    }
public:
    int minDistance(string word1, string word2) {
        int n = word1.size(), m = word2.size();
        vector<vector<int>> dp(n, vector<int>(m, -1));

        int lcs = solve(word1, word2, 0, 0, dp);
        return (n - lcs) + (m - lcs);
    }
};
