class Solution {
private:
    int f(int ind, int buy, int n, vector<int>& prices, int fee, vector<vector<int>>& dp) {
        if (ind >= n) return 0;
        if (dp[ind][buy] != -1) return dp[ind][buy];

        int profit = 0;
        if (buy) {
            profit = max(-prices[ind] + f(ind + 1, 0, n, prices, fee, dp), 
                         0 + f(ind + 1, 1, n, prices, fee, dp));
        } else {
            profit = max(prices[ind] - fee + f(ind + 1, 1, n, prices, fee, dp), 
                         0 + f(ind + 1, 0, n, prices, fee, dp));
        }

        return dp[ind][buy] = profit;
    }

public:
    int maxProfit(vector<int>& prices, int fee) {
        int n = prices.size();
        vector<vector<int>> dp(n, vector<int>(2, -1));
        return f(0, 1, n, prices, fee, dp);
    }
};