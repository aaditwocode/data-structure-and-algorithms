MEMOIZATION+REC

class Solution {
public:
    int fib(int n) {
        if (n <= 1) return n;
        vector<int> dp(n + 1, -1);
        return helper(n, dp);
    }
    
private:
    int helper(int n, vector<int>& dp) {
        if (n <= 1) return n; 
        if (dp[n] != -1) return dp[n]; 
        return dp[n] = helper(n - 1, dp) + helper(n - 2, dp); 
    }
};




BOTTOM UP
class Solution {
public:
    int fib(int n) {
        if(n==0 || n==1) return n;
        vector<int> dp(n+1,-1);
        int dp[0]=0;
        int dp[1]=1;
        for(int i=2;i<=n;i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
};



o(1)

class Solution {
public:
    int fib(int n) {
        if (n <= 1) return n;
        int a = 0, b = 1;
        for (int i = 2; i <= n; ++i) {
            int temp = a + b;
            a = b;
            b = temp;
        }
        return b;
    }
};
