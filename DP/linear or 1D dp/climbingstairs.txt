MEMOIZATION+REC


class Solution {
public:
   int climbStairs(int n) {
        vector<int> dp(n + 1, -1);
        return f(n, dp);
   }
  private:
   int f(int n, vector<int>& dp) {
        if (n == 0 || n == 1) return 1;
        if (dp[n] != -1) return dp[n];
        dp[n] = f(n - 1, dp) + f(n - 2, dp);
        return dp[n];
   }
}; 


BOTTOM UP
class Solution {
public:
    int climbStairs(int n) {
        if(n==0 || n==1 || n==2) return n;
        vector<int> dp(n+1,-1);
         dp[0]=0;
         dp[1]=1;
         dp[2]=2;
        for(int i=3;i<=n;i++){
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
};