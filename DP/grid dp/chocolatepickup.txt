#include <vector>
#include <algorithm>
#include <climits>

using namespace std;

class Solution {
public:
    int solve(int i, int j1, int j2, int n, int m, vector<vector<int>>& grid, vector<vector<vector<int>>>& dp) {
        if (j1 < 0 || j1 >= m || j2 < 0 || j2 >= m) {
            return INT_MIN;
        }
        if (i == n - 1) {
            if (j1 == j2) {
                return grid[i][j1];
            } else {
                return grid[i][j1] + grid[i][j2];
            }
        }
        if (dp[i][j1][j2] != -1) {
            return dp[i][j1][j2];
        }
        int maxChocolates = INT_MIN;
        for (int dj1 = -1; dj1 <= 1; dj1++) {
            for (int dj2 = -1; dj2 <= 1; dj2++) {
                int value = solve(i + 1, j1 + dj1, j2 + dj2, n, m, grid, dp);
                if (value != INT_MIN) {
                    if (j1 == j2) {
                        maxChocolates = max(maxChocolates, grid[i][j1] + value);
                    } else {
                        maxChocolates = max(maxChocolates, grid[i][j1] + grid[i][j2] + value);
                    }
                }
            }
        }
        return dp[i][j1][j2] = maxChocolates;
    }

    int maximumChocolates(int n, int m, vector<vector<int>>& grid) {
        vector<vector<vector<int>>> dp(n, vector<vector<int>>(m, vector<int>(m, -1)));
        return solve(0, 0, m - 1, n, m, grid, dp);
    }
};