BOTTOM UP

class Solution {
public:
    bool canPartition(vector<int>& nums) {
        int n = nums.size();
        int sum = 0;

        for (auto i : nums) {
            sum += i;
        }

        if (sum % 2 != 0) {
            return false;
        }

        int target = sum / 2;
        vector<vector<bool>> t(n + 1, vector<bool>(target + 1, false));

        for (int i = 0; i <= n; ++i) {
            for (int j = 0; j <= target; ++j) {
                if (j == 0) {
                    t[i][j] = true;
                } else if (i == 0) {
                    t[i][j] = false;
                } else {
                    if (nums[i - 1] <= j) {
                        t[i][j] = t[i - 1][j - nums[i - 1]] || t[i - 1][j];
                    } else {
                        t[i][j] = t[i - 1][j];
                    }
                }
            }
        }

        return t[n][target];
    }
};
