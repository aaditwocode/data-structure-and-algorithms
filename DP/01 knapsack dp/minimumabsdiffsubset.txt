REC+MEMOIZATION
#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    vector<vector<int>> dp;
    
    int solve(int i, int sum, vector<int>& arr) {
        if (i == 0) {
            if (sum == 0 || sum == arr[0]) return 1;
            return 0;
        }
        
        if (dp[i][sum] != -1) return dp[i][sum];
        
        int notPick = solve(i - 1, sum, arr);
        int pick = 0;
        if (arr[i] <= sum)
            pick = solve(i - 1, sum - arr[i], arr);
        
        return dp[i][sum] = (pick || notPick);
    }
    
    int minimumDifference(vector<int>& nums) {
        int totalSum = 0;
        for (int num : nums) totalSum += abs(num);
        
        int n = nums.size();
        dp.resize(n, vector<int>(totalSum + 1, -1));
        
        int mn = INT_MAX;
        for (int s = 0; s <= totalSum / 2; ++s) {
            if (solve(n - 1, s, nums)) {
                mn = min(mn, totalSum - 2 * s);
            }
        }
        
        return mn;
    }
};
