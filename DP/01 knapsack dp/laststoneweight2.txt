#include <bits/stdc++.h>
using namespace std;

vector<vector<int>> dp;

int solve(vector<int>& stones, int i, int currentSum, int totalSum) {
    int n = stones.size();
    if (i == n) 
        return abs((totalSum - currentSum) - currentSum);
    
    if (dp[i][currentSum] != -1)
        return dp[i][currentSum];
    
    int take = solve(stones, i + 1, currentSum + stones[i], totalSum);
    int notTake = solve(stones, i + 1, currentSum, totalSum);
    
    return dp[i][currentSum] = min(take, notTake);
}

int lastStoneWeightII(vector<int>& stones) {
    int totalSum = accumulate(stones.begin(), stones.end(), 0);
    int n = stones.size();
    dp.resize(n + 1, vector<int>(totalSum + 1, -1));
    return solve(stones, 0, 0, totalSum);
}

int main() {
    vector<int> stones = {2,7,4,1,8,1};
    cout << lastStoneWeightII(stones);
    return 0;
}
