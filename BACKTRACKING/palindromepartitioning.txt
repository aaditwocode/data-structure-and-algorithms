class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> result;
        vector<string> temp;
        solve(result, temp, 0, s);
        return result;
    }

private:
    void solve(vector<vector<string>>& result, vector<string>& temp, int index, string& s) {
        if (index == s.size()) {
            result.push_back(temp);
            return;
        }

        for (int i = index; i < s.size(); ++i) {
            if (isPalindrome(s, index, i)) {
                temp.push_back(s.substr(index, i - index + 1));
                solve(result, temp, i + 1, s);
                temp.pop_back();
            }
        }
    }

    bool isPalindrome(string& s, int left, int right) {
        while (left < right) {
            if (s[left++] != s[right--]) return false;
        }
        return true;
    }
};
