TOPIC----(MATH+ARRAY+GREEDY)
class Solution {
public:
    long long minCost(vector<int>& basket1, vector<int>& basket2) {
        unordered_map<int, int> mp;
        int minele = INT_MAX;

      
        for (int &x : basket1) {
            mp[x]++;
            minele = min(minele, x);
        }

       
        for (int &x : basket2) {
            mp[x]--;
            minele = min(minele, x);
        }

        vector<int> finallist;
        long long result = 0;

      
        for (auto it : mp) {
            int cost = it.first;
            int count = it.second;
            
            if (count == 0) continue;
            if (count == -1) return -1; 

          
            for (int c = 1; c <= abs(count / 2); c++) {
                finallist.push_back(cost);
            }
        }

       
        sort(finallist.begin(), finallist.end());

        for (int i = 0; i < finallist.size()/2; i++) {
            result += min(finallist[i], minele * 2);
        }

        return result;
    }
};
