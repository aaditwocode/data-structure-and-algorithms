class Solution {
public:	
    vector<string> NBitBinary(int n) {
        vector<string> result;
        string output = "";
        int ones = 0;  
        int zeros = 0; 
     
        solve(ones, zeros, output, result, n);
        
        
        sort(result.begin(), result.end(), greater<string>());
        
        return result;
    }

private:
    void solve(int ones, int zeros, string &op, vector<string> &result, int n) {
      
        if (op.length()==n) {
            result.push_back(op);
            return;
        }

      
        if (ones < n) {
            string op1 = op;
            op1.push_back('1');
            solve(ones + 1, zeros, op1, result, n);
        }

        if (zeros < ones) {
            string op2 = op;
            op2.push_back('0');
            solve(ones, zeros + 1, op2, result, n);
        }
    }
};