class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {

        vector<vector<int>> result;
       
        priority_queue<pair<int, pair<int, int>>> maxheap;

     
        for (int i = 0; i < points.size(); i++) {
           
            int dist = points[i][0] * points[i][0] + points[i][1] * points[i][1];

           
            maxheap.push({dist, {points[i][0], points[i][1]}});

          
            if (maxheap.size() > k) {
                maxheap.pop();
            }
        }

         while (!maxheap.empty()) {
            auto x = maxheap.top();
            result.push_back({x.second.first, x.second.second});
            maxheap.pop();
        }

        return result;
    }
};