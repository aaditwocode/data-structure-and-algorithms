/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* deleteNode(TreeNode* root, int key) {
        if (!root) return nullptr;
        TreeNode* curr = root;
        
        while (curr) {
            if (key < curr->val) {
                curr->left = deleteNode(curr->left, key);
                break;
            } else if (key > curr->val) {
                curr->right = deleteNode(curr->right, key);
                break;
            } else {
                if (!curr->left) return curr->right;
                if (!curr->right) return curr->left;
                TreeNode* minNode = getMin(curr->right);
                curr->val = minNode->val;
                curr->right = deleteNode(curr->right, minNode->val);
                break;
            }
        }
        return root;
    }
    
    TreeNode* getMin(TreeNode* node) {
        while (node && node->left) node = node->left;
        return node;
    }
};

